// DATA TYPES
    // 1-) Primitive Data Types (are immutable, so non-modifiable data types)
        // Numbers : Integers, floats
        // Strings : Any data under single quote, double quote or backtick quote
        // Booleans : true or false value
        // Null : empty value or no value
        // Undefined : a declared variable without a value
        // Symbol : A unique value that can be generated by Symbol constructor

        /*  let word = "JavaScript";        // This expression does not change the string stored in the variable word. 
            word[2] = "M";

            console.log(word); */


    // 2-) Non-Primitive Data Types (Object References -they're modifiable but incomparable data types-)
        // Objects
            // let userOne = {
            //     name:'Asabeneh',
            //     role:'teaching',
            //     country:'Finland'
            //     }
                
            //     let userTwo = {
            //     name:'Asabeneh',
            //     role:'teaching',
            //     country:'Finland'
            //     }
                
            //     console.log(userOne == userTwo) // false

            // function calc() { some codes }
            // function calculate() { the same codes }
            // console.log(calc == calculate)   // false

        // Arrays
            // * Arrays can contain the same or different data types.
            // * Array values are referenced by their index.
                // let nums = [1, 2, 3]
                // nums[0] = 10
                
                // console.log(nums)  // [10, 2, 3]

                // let nums = [1, 2, 3]         // They're not be compared with each other
                // let numbers = [1, 2, 3]

                // console.log(nums == numbers)  // false
/*      --------------------------------------------------------- */
                // let nums = [1,2,3];      // Two objects are only strictly equal if they refer to the same underlying object.
                // let numbers = nums;

                // console.log(nums === numbers)       // true

// NOTE :  Do not compare arrays, functions, or objects. Non-primitive values are referred to as reference types, because they are being compared by reference instead of value. 

        // Numbers
            // * Numbers are integers and decimal values which can do all the arithmetic operations.
            // Math Object
                // const PI = Math.PI
                // console.log(PI)                            // 3.141592653589793

            // Rounding to the closest number
                // if above .5 up if less 0.5 down rounding

                // console.log(Math.round(PI))                      // 3 to round values to the nearest number
                // console.log(Math.round(9.81))                    // 10
                // console.log(Math.floor(PI))                      // 3 rounding down
                // console.log(Math.ceil(PI))                       // 4 rounding up
                // console.log(Math.min(-5, 3, 20, 4, 5, 10))       // -5, returns the minimum value    // min() & max() don't work for Arrays  (!)
                // console.log(Math.max(-5, 3, 20, 4, 5, 10))       // 20, returns the maximum value

            // const randNum = Math.random()              // creates random number between 0 to 0.999999
            // console.log(randNum)

            // Let us  create random number between 0 to 10             (!)

                // const num = Math.floor(Math.random() * 11)           // creates random number between 0 and 10
                // console.log(num)

                // const num = Math.floor(Math.random() * 50) + 50     // creates random number between 50 and 100
                // console.log(num)

            //Absolute value
                // console.log(Math.abs(-10))      // 10

            //Square root
                // console.log(Math.sqrt(100))     // 10
                // console.log(Math.sqrt(2))       // 1.4142135623730951

            // Power
                // console.log(Math.pow(3, 2))     // 9
                // console.log(Math.E)             // 2.718

            // Logarithm
                // Returns the natural logarithm with base E of x, Math.log(x)
                    // console.log(Math.log(2))        // 0.6931471805599453
                    // console.log(Math.log(10))       // 2.302585092994046

                // Returns the natural logarithm of 2 and 10 respectively
                    // console.log(Math.LN2)           // 0.6931471805599453
                    // console.log(Math.LN10)          // 2.302585092994046

            // Trigonometry
                // Math.sin(0)
                // Math.sin(60)
                // Math.cos(0)
                // Math.cos(60)

        // Strings
            // String Concatenation ( + is used to concatenate 2 or more strings, but it's an old way.)
                // let space = ' '
                // let firstName = 'Asabeneh'
                // let lastName = 'Yetayeh'
                // let country = 'Finland'
                // let city = 'Helsinki'
                // let language = 'JavaScript'
                // let job = 'teacher'
                // let age = 250

                // let fullName = firstName + space + lastName
                // let personInfoOne = fullName + '. I am ' + age + '. I live in ' + country;           <-- ES5 string addition

                // console.log(personInfoOne)

            // We can use the backslash (\) at the end of each line to indicate that the string will continue on the next line.
                // const paragraph = "My name is Asabeneh Yetayeh. I live in Finland, Helsinki.\
                // I am a teacher and I love teaching. I teach HTML, CSS, JavaScript, React, Redux, \
                // Node.js, Python, Data Analysis and D3.js for anyone who is interested to learn. \
                // In the end of 2019, I was thinking to expand my teaching and to reach \
                // to global audience and I started a Python challenge from November 20 - December 19.\
                // It was one of the most rewarding and inspiring experience.\
                // Now, we are in 2020. I am enjoying preparing the 30DaysOfJavaScript challenge and \
                // I hope you are enjoying too."

                // console.log(paragraph)

            // Backslash can also be used for Escape Sequences Character
                // \n: new line
                // \t: Tab, means 8 spaces
                // \\: Back slash
                // \': Single quote (')
                // \": Double quote (")

            // Template Literals (Template Strings)
                // * To create a template strings, we use two back-ticks. (e.g. `some text ${maybe-a-variable}`)
                    // console.log(`The sum of 2 and 3 is 5`)                   // statically writing the data
                    // let a = 2
                    // let b = 3
                    // console.log(`The sum of ${a} and ${b} is ${a + b}`)      // injecting the data dynamically // ES6 - String interpolation method

                    //console.log(`${a} is greater than ${b}: ${a > b}`)          // We can also use ternary operations or make comparisons

            // String Methods
                // * Everything in JavaScript is an object.
                    // .length : Returns the length of a string (All spaces will be included and length is always one more than the last char)
                // We can access every char in a string.
                    // let string = 'JavaScript'
                    // let firstLetter = string[0]

                    // console.log(firstLetter)           // J

                    // let secondLetter = string[1]       // a
                    // let thirdLetter = string[2]
                    // let lastLetter = string[9]

                    // console.log(lastLetter)            // t

                    // let lastIndex = string.length - 1

                    // console.log(lastIndex)  // 9
                    // console.log(string[lastIndex])    // t

                    // toUpperCase() : Turns all the letters into uppercase latters
                        // let string = 'JavaScript'

                        // console.log(string.toUpperCase())     // JAVASCRIPT

                    // toLowerCase() : Turns all the letters into lowercase latters
                        // let string = 'JavaScript'

                        // console.log(string.toUpperCase())     // javascript

                    // substr(index, numb) : First parameter is index and the second one is how many char will be included. The second one is optional.
                        // let string = 'JavaScript'
                        // console.log(string.substr(4,6))    // Script

                        // let country = 'Finland'
                        // console.log(country.substr(3, 4))   // land

                    // substring(index, till) : The last char won't be included.
                        // let string = 'JavaScript'

                        // console.log(string.substring(0,4))     // Java
                        // console.log(string.substring(4,10))    // Script
                        // console.log(string.substring(4))       // Script

                        // let country = 'Finland'

                        // console.log(country.substring(0, 3))   // Fin
                        // console.log(country.substring(3, 7))   // land
                        // console.log(country.substring(3))      // land

                    // split()  : The split method splits a string at a specified place and returns it as an array.
                        // let string = '30 Days Of JavaScript'

                        // console.log(string.split())     // Changes to an array -> ["30 Days Of JavaScript"]
                        // console.log(string.split(' '))  // Split to an array at space -> ["30", "Days", "Of", "JavaScript"]
                        
                        // let firstName = 'Asabeneh'
                        
                        // console.log(firstName.split())    // Change to an array - > ["Asabeneh"]
                        // console.log(firstName.split(''))  // Split to an array at each letter ->  ["A", "s", "a", "b", "e", "n", "e", "h"]
                        
                        // let countries = 'Finland, Sweden, Norway, Denmark, and Iceland'
                        
                        // console.log(countries.split(','))  // split to any array at comma -> ["Finland", " Sweden", " Norway", " Denmark", " and Iceland"]
                        // console.log(countries.split(', ')) //  ["Finland", "Sweden", "Norway", "Denmark", "and Iceland"]

                    // trim()   : Removes unnecessary spaces at the beginning and the end of a string
                        // let string = '   30 Days Of JavaScript   '

                        // console.log(string.trim(' '))        // "30 Days Of JavaScript"
                        
                        // let firstName = ' Asabeneh '
                        
                        // console.log(firstName)
                        // console.log(firstName.trim())  // still removes spaces at the beginning and the end of the string

                    // includes()   : checks whether or not a char or word in a specified string. It returns true or false.
                        // let country = 'Finland'

                        // console.log(country.includes('fin'))         // false        <- it is case sensitive!
                        // console.log(country.includes('Fin'))         // true
                        // console.log(country.includes('land'))        // true
                        // console.log(country.includes('Land'))        // false 
                        // console.log("30 Days of JS".includes(30))    // true

                    // replace()    : The first parameter is for old substring, the second one is for new substring. It can also takes RegEx.
                        // let string = '30 Days Of JavaScript'
                        // console.log(string.replace('JavaScript', 'Python')) // 30 Days Of Python

                        // let country = 'Finland'
                        // console.log(country.replace('Fin', 'Noman'))       // Nomanland

                    // charAt()     : It takes an index number and returns the char at the specified index.
                        // let string = '30 Days Of JavaScript'
                        // console.log(string.charAt(0))        // 3

                        // let lastIndex = string.length - 1
                        // console.log(string.charAt(lastIndex)) // t

                    // charCodeAt()     : It takes an index number and returns the the ascii number of the char at the specified index.
                        // let string = '30 Days Of JavaScript'
                        // console.log(string.charCodeAt(3))        // D ASCII number is 68

                        // let lastIndex = string.length - 1
                        // console.log(string.charCodeAt(lastIndex)) // t ASCII is 116

                    // indexOf() : Takes a substring and if the substring exists, it returns the first index number (If it doesn't exists, it returns -1)
                        // let string = '30 Days Of JavaScript'

                        // console.log(string.indexOf('D'))          // 3
                        // console.log(string.indexOf('Days'))       // 3
                        // console.log(string.indexOf('days'))       // -1

                    // lastIndexOf()   : Takes a substring and if the substring exists, it returns the last index number
                        // let string = 'I love JavaScript. If you do not love JavaScript what else can you love.'

                        // console.log(string.lastIndexOf('love'))          // 67
                        // console.log(string.lastIndexOf('you'))           // 63
                        // console.log(string.lastIndexOf('JavaScript'))    // 38
                        // console.log(string.lastIndexOf('Python'))        // -1

                    // concat(substring, substring, substring): it takes many substrings and joins them.
                        // let string = '30'
                        // console.log(string.concat(" Days", " Of ", " JavaScript")) // 30 Days Of JavaScript
                        
                        // let country = 'Fin'
                        // console.log(country.concat("land")) // Finland

                    // startsWith() : Takes a substring and checks whether a string STARTS with it or not, and returns a boolean.
                        // let string = 'Love is the best to in this world'

                        // console.log(string.startsWith('Love'))   // true
                        // console.log(string.startsWith('love'))   // false

                    // endsWith() : Takes a substring and checks whether a string ENDS with it or not, and returns a boolean.
                        // let string = 'Love is the most powerful feeling in the world'

                        // console.log(string.endsWith('world'))            // true
                        // console.log(string.endsWith('World'))            // false
                        // console.log(string.endsWith('love'))             // false
                        // console.log(string.endsWith('in the world'))     // true

                    // search() : Takes a substring and returns the first match index. The search value can be a string or a regular expression pattern.
                        // let string = 'I love JavaScript. If you do not love JavaScript what else can you love.'

                        // console.log(string.search('love'))           // 2
                        // console.log(string.search(/javascript/i))    // 7
                        // console.log(string.search("Python"))         // -1

                    // match() : Takes a substring or regular expression pattern and returns them in an array, if there is no match, it returns null. 
                        // RegEx (short) : It starts with / sign and ends with / sign.
                            // let string = 'love'
                            // let patternOne = /love/     // without any flag
                            // let patternTwo = /love/gi   // g-means to search in the whole text, i - case insensitive
                        
                        // let string = 'I love JavaScript. If you do not love JavaScript what else can you Love.'
                        // console.log(string.match('love'))        / Array : ["love"]
                        // console.log(string.match(/love/gi))      / Array : ["love", "Love"]

                        // Extraction of some numbers from a text :
                            // let txt = 'In 2019, I ran 30 Days of Python. Now, in 2020 I am super excited to start this challenge'
                            // let regEx = /\d/g

                            // d with escape character means d not a normal d instead acts a digit
                            // + means one or more digit numbers side by side,
                            // if there is g after that it means global, search everywhere.

                            // console.log(txt.match(regEx))  // ["2", "0", "1", "9", "3", "0", "2", "0", "2", "0"]
                            // console.log(txt.match(/\d+/g)) // ["2019", "30", "2020"]

                    // repeat(): Takes a number and returns the repeated version of the string.
                        // let string = 'love'
                        // console.log(string.repeat(10)) // lovelovelovelovelovelovelovelovelovelove

                    // Getting some chars of a string by using .charAt() and Math.random()
                        // const str = "JavaScript";
                        // str.charAt(Math.floor(Math.random() * str.length)); 

                    // Getting specified word without RegEx :
                        // let rule = 'You cannot end a sentence with because because because is a conjunction';
                        // rule.indexOf("because");                     // 31
                        // rule.lastIndexOf("because");                 // 47
                        // rule.substring(31, 48);                     // "because because because"

            // CHECKING DATA TYPES & CASTING
                // Checking Data Types  :   We use typeof keyword to check them.
                    // let job;

                    // console.log(typeof 'Asabeneh')  // string
                    // console.log(typeof 10)          // number
                    // console.log(typeof 3.14)        // number
                    // console.log(typeof true)        // boolean
                    // console.log(typeof false)       // boolean
                    // console.log(typeof NaN)         // number        <-- Means that it is not a number but a number object
                    // console.log(typeof job)         // undefined
                    // console.log(typeof null)        // object        <-- Means that it's empty

                // Changing Data Type (Casting) :  We use parseInt(), parseFloat(), Number(), + sign, str() When we do arithmetic operations string numbers should be first converted to integer or float if not it returns an error.
                    // String to Int : We can convert string number to a number. Any number inside a quote is a string number.
                        // let num = '10'

                        // let numInt = parseInt(num)
                        // console.log(numInt) // 10

                        // let numInt = Number(num)
                        // console.log(numInt) // 10

                        // let numInt = +num
                        // console.log(numInt) // 10

                    // String to Float : We can convert string float number to a float number. Any float number inside a quote is a string float number.
                        // let num = '9.81'
                        // let numFloat = parseFloat(num)
                        
                        // console.log(numFloat) // 9.81

                        // let numFloat = Number(num)
                        // console.log(numFloat) // 9.81

                        // let numFloat = +num
                        // console.log(numFloat) // 9.81

                    // Float to Int : We use parseInt();
                        // let num = 9.81
                        // let numInt = parseInt(num)

                        // console.log(numInt) // 9


// EXERCISE : Cleaning a string and getting the most common word.

/* const dirtyWord = '%I $am@% a %tea@cher%, &and& I lo%#ve %te@a@ching%;. The@re $is no@th@ing; &as& mo@re rewarding as educa@ting &and& @emp%o@weri@ng peo@ple. ;I found tea@ching m%o@re interesting tha@n any ot#her %jo@bs. %Do@es thi%s mo@tiv#ate yo@u to be a tea@cher! ? %Th#is 30#Days&OfJavaScript &is al@so $the $resu@lt of &love& of tea&ching.';

let cleanedWord = dirtyWord.replace(/[%,$,@,!,#,&,;]/g, "");
    cleanedWord = cleanedWord.replace("30DaysOfJavaScript", "30 Days Of JavaScript");

let splitted = cleanedWord.split(" ");
let myArr = [].sort();

for (let i = 0; i < splitted.length; i++) {
    if (splitted.indexOf(splitted[i]) !== splitted.lastIndexOf(splitted[i])) {
        myArr.push(splitted[i]);
    };
};
myArr = myArr.sort();
console.log(myArr);     */

// EXERCISE : Calculating a person's annual salary.

/*const txt =  'He earns 5000 euro from salary per month, 10000 euro annual bonus, 15000 euro online courses per month.';
let salaries = txt.match(/\d+/g);
let sum = 0;
for (let i = 0; i < salaries.length; i++) {
    if (salaries[i] !== salaries[2]){
        sum += +salaries[i];
    }
}
sum += 10000;
console.log(sum); */